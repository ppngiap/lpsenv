source ~/.lpsenv/git-pipeline-env

alias l='vim ~/.lpsenv/lpsrc; . ~/.lpsenv/lpsrc'
alias ll='. ~/.lpsenv/lpsrc'

DT=`date +%Y-%m-%dT%H%M%S`


function pushlpsenv() {
        ssh -t $1 "if \[ ! -d ~/.lpsenv \]; then mkdir ~/.lpsenv; fi"
        scp -r ~/.lpsenv/* $1:~/.lpsenv/
}

alias lpspush=pushlpsenv

function pulllpsenv() {
        ssh -t $1 "ls -l ~/.lpsenv/*"
        scp -r $1:~/.lpsenv/* ~/.lpsenv/
}

alias lpspull=pulllpsenv

function ports() {
  lsof -Pnl +M -i -cmd | grep -E "LISTEN|TCP|UDP"
}

function gradleClasspath() {
  echo "\$1 = $1"
  cmd=$1":dependencies --configuration $2"
  echo "\$cmd =  $cmd"
  ./gradlew $cmd
}

function gradleCompileClasspath() {
  gradleClasspath $1 "compileClasspath"
}
alias gccp=gradleCompileClasspath

function gradleTestCompileClasspath() {
  gradleClasspath $1 "testCompileClasspath"
}
alias gtcc=gradleTestCompileClasspath

alias lpsenv='cd ~/.lpsenv'
alias lps='cd ~/gitlab/lps-services'
alias lpsbase='cd ~/gitlab/lpsbase'
alias vdp='lps; cd locationlogic/vdp'
alias ag='alias | grep'
alias hg='history | grep'

alias bdevenv='lps; source env/build-dev.bashrc'
alias bprodenv='lps; source env/build.bashrc'
alias lbuild='lps; make PKG_ID=mc_lps PKG_TYPE=opt export | tee lps_$DT.log'
alias cbuild='lps; make clean; lbuild'
alias rmsymlinks='lps; cd lib; find . -type l -depth 1 -exec rm {} \;'

alias sim='cd ~/lps_testing/simulators'
alias vlasim='sim; cd sim'
alias enlssim='sim; cd enls'
alias cnlssim='sim; cd cnls'
alias smscsim='sim; cd smscsim'
alias cpmpcsim='sim; cd cpmpc'

alias cnlsrun='cnlssim; nohup java -Done-jar.silent=true -jar mlpSim-0.2.one-jar.jar ./cnlsSim.properties > debug.log 2> error.log &'
alias enlsrun='enlssim; nohup java -Done-jar.silent=true -jar mlpSim-0.2.one-jar.jar ./mpcSimEme.properties > debug.log 2> error.log &'
alias cpmpcrun='cpmpcsim; nohup java -Done-jar.silent=true -jar mlpSim-0.2.one-jar.jar ./cpmpcSim.properties > debug.log 2> error.log &'
alias smscrun='smscsim; source ~/venv/bin/activate; python smsc_simulator.py > debug.log 2> error.log &'
alias simrun='pushd .; cnlsrun; enlsrun; cpmpcrun; smscrun; popd'

alias alog='tail -f /opt/logs/adminserver/AdminServer.log'
alias l1log='tail -f /opt/logs/llgateway/LLGateway1.log'
alias d1log='tail -f /opt/logs/llgateway/debug_mpc01.log'
alias l2log='tail -f /opt/logs/llgateway/LLGateway2.log'
alias d2log='tail -f /opt/logs/llgateway/debug_mpc02.log'

alias mpc.properties='vim /opt/lbs/llgateway/properties/mpc.properties'
alias vmpc=mpc.properties

alias lpsfindjar='find . -name "*.kts" -exec grep jar\" {} \;'


alias remoteStartLpsAdmin="ssh lbsadm 'sh -c '\''nohup /opt/lbs/scripts/startAdmin.sh 2>&1 & '\'' ' " 
alias remoteViewAdminBootProperties="ssh lbsadm 'cat /opt/lbs/domains/vzwlps/servers/AdminServer/security/boot.properties' "
alias remoteTailAdminServerLog="ssh -t lbsadm 'tail -f /opt/logs/adminserver/AdminServer.log' " 

alias 1remoteStartLpsGw="ssh lbsgw1 'sh -c '\''nohup /opt/lbs/scripts/startNM.sh 2>&1 & '\'' ' " 
alias 1remoteStopLpsGw="ssh lbsgw1 'sh -c '\''nohup /opt/lbs/scripts/stopNM.sh 2>&1 & '\'' ' " 

alias 1ssh='ssh lbsgw1'
alias sshgw1='ssh lbsgw1'

alias 2ssh='ssh lbsgw2'
alias sshgw2='ssh lbsgw2'

alias 1remoteViewNodeManagerPropeties="ssh -t lbsgw1 'cat /opt/lbs/domains/vzwlps/nodemanager/nodemanager.properties' "
alias 2remoteViewNodeManagerPropeties="ssh -t lbsgw2 'cat /opt/lbs/domains/vzwlps/nodemanager/nodemanager.properties' "

#alias 1tailNodeManagerLog="ssh -t lbsgw1 'tail -f /opt/lbs/domains/vzwlps/nodemanager/nodemanager.log' "
alias 1tailNodeManagerLog="ssh -t lbsgw1 'tail -f /opt/logs/nodemanager/nodemanager.log' "
alias 2tailNodeManagerLog="ssh -t lbsgw2 'tail -f /opt/lbs/domains/vzwlps/nodemanager/nodemanager.log' "

alias wlst='sh /opt/thirdparty/oracle/oracle_common/common/bin/wlst.sh'

alias socket='sudo ss -tunelp'
